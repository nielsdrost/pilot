# Application file, generated by Ibis Deploy on Sun Dec 11 15:15:06 CET 2011

# Valid keys for applications:
# KEY                COMMENT
# main.class         Main class of application
# arguments          Arguments of the application(*)
# libs               Files and directories which need to be in the classpath.
#                    Automatically pre-staged as well(*)
# input.files        Input files copied to root of sandbox(*)
# output.files       Output files copied from root of sandbox(*)
# system.properties  Additional system properties in the form of name=value(*)
# jvm.options        Additional JVM options, for instance memory options(*)
# log4j.file         Log4j properties file used for the application.
#                    Defaults to log4j of ibis-deploy itself.
# memory.size        Integer: amount of memory to use for this application (in Megabytes)
# (* = comma separated list of items)


# Application "JobServer"
JobServer.main.class = glue.multicore.JobServer
JobServer.libs = lib, ibis-deploy/lib-server
#JobServer.system.properties =
#JobServer.java.options =
JobServer.log4j.file = log4j.properties
#JobServer.memory.size =

# in-place version (must set absolute path of input/output images,
# only works if JobServer is on localhost
JobServer.arguments = --script blur.sh --input /home/niels/workspace/pilot/images --output /home/niels/workspace/pilot/output-images
JobServer.input.files = scripts/blur.sh
JobServer.output.files = 

# input/output via sandbox version. Extra copy of input/output files, 
# but supports a JobServer on _any_ machine, not just localhost
#JobServer.arguments = --script blur.sh --input images --output output-images
#JobServer.input.files = images, scripts/blur.sh
#JobServer.output.files = output-images

# Application "Pilot"
Pilot.main.class = glue.multicore.PilotJob
#Pilot.arguments =
Pilot.libs = lib, ibis-deploy/lib-server
#Pilot.input.files =
#Pilot.output.files =
#Pilot.system.properties =
#Pilot.java.options =
Pilot.log4j.file = log4j.properties
#Pilot.memory.size =
